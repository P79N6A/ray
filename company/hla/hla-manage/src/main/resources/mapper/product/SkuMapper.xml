<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Mybatis mapper for product  Auto generated by fms-mybatis-generator -->
<mapper namespace="com.rongyi.hla.mapper.product.SkuMapper">
    <resultMap id="product" type="com.rongyi.entity.product.Product">
        <id property="id" column="p_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="rfidCode" column="p_rfid_code" javaType="string" jdbcType="VARCHAR"/>
        <result property="skuCode" column="p_sku_code" javaType="string" jdbcType="VARCHAR"/>
        <result property="spuCode" column="p_spu_code" javaType="string" jdbcType="VARCHAR"/>
        <result property="price" column="p_price" javaType="int" jdbcType="INTEGER"/>
        <result property="name" column="p_name" javaType="string" jdbcType="VARCHAR"/>
        <result property="subtitle" column="p_subtitle" javaType="string" jdbcType="VARCHAR"/>
        <result property="notes" column="p_notes" javaType="string" jdbcType="VARCHAR"/>
        <result property="image" column="p_image" javaType="string" jdbcType="VARCHAR"/>
        <result property="originPlace" column="p_origin_place" javaType="string" jdbcType="VARCHAR"/>
        <result property="material" column="p_material" javaType="string" jdbcType="VARCHAR"/>
        <result property="shortNotes" column="p_short_notes" javaType="string" jdbcType="VARCHAR"/>
        <result property="createDate" column="p_create_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="updateDate" column="p_update_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="sqlproductColumns">
		p_.id AS p_id,
		p_.rfid_code AS p_rfid_code,
		p_.sku_code AS p_sku_code,
		p_.spu_code AS p_spu_code,
		(p_.price)/100 AS p_price,
		p_.`name` AS p_name,
		p_.subtitle AS p_subtitle,
		p_.notes AS p_notes,
		p_.image AS p_image,
		p_.origin_place AS p_origin_place,
		p_.material AS p_material,
		p_.short_notes AS p_short_notes,
		p_.create_date AS p_create_date,
		p_.update_date AS p_update_date
	</sql>

    <select id="get" parameterType="java.lang.Integer" resultMap="product">
        SELECT
        <include refid="sqlproductColumns"/>
        FROM product_sku p_
        WHERE p_.id = #{id,jdbcType=INTEGER}
    </select>

    <!--通过RFIDCodes查询产品-->
    <select id="selectProductsByRFIDCodes" resultMap="product">
        SELECT
        <include refid="sqlproductColumns"/>
        FROM product_sku p_
        WHERE p_.rfid_code IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>

    </select>

    <!--通过spuCode查询产品-->
    <select id="selectProductsBySPUCode" parameterType="string" resultMap="product">
        SELECT
        <include refid="sqlproductColumns"/>
        FROM product_sku p_
        WHERE p_.spu_code = #{spuCode,jdbcType=VARCHAR}
    </select>


    <select id="listBySpuCode" parameterType="string" resultMap="product">
        SELECT
        <include refid="sqlproductColumns"/>
        FROM product_sku p_
        WHERE p_.spu_code = #{spuCode,jdbcType=VARCHAR}
    </select>



    <select id="findAll" resultMap="product">
        SELECT
        <include refid="sqlproductColumns"/>
        FROM product_sku p_
    </select>

    <!--查询的sku级别的 条件是 -->
    <select id="selectForPage" parameterType="com.rongyi.dto.product.ProductDTO" resultMap="product">
        SELECT
        <include refid="sqlproductColumns"/>
        FROM group_spu AS group_spu_
        LEFT JOIN product_sku AS p_  ON p_.spu_code = group_spu_.spu_code
        <where>
            <if test="spuCode != null and spuCode != ''"> AND p_.spu_code = #{spuCode,jdbcType=VARCHAR}</if>
            <if test="groupCode != null and groupCode != ''"> AND group_spu_.group_code = #{groupCode,jdbcType=VARCHAR}</if>
        </where>
        LIMIT #{offSet},#{pageSize};
    </select>


    <!--关联查询-->
    <select id="selectPageCount" parameterType="com.rongyi.dto.product.ProductDTO" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM group_spu AS group_spu_
        LEFT JOIN product_sku AS p_  ON p_.spu_code = group_spu_.spu_code
           <where>
            <if test="spuCode != null and spuCode != ''"> AND p_.spu_code = #{spuCode,jdbcType=VARCHAR}</if>
            <if test="groupCode != null and groupCode != ''"> AND group_spu_.group_code = #{groupCode,jdbcType=VARCHAR}</if>
        </where>
    </select>



    <select id="selectTotal" resultType="java.lang.Integer">
      SELECT        COUNT(id)    FROM        product_sku
    </select>

    <insert id="save" parameterType="com.rongyi.entity.product.Product" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO product_sku (
			rfid_code,
			sku_code,
			spu_code,
			price,
			`name`,
			subtitle,
			notes,
			image,
			origin_place,
			material,
			short_notes,
			create_date,
			update_date
		)
        VALUES (
			#{rfidCode,jdbcType=VARCHAR},
			#{skuCode,jdbcType=VARCHAR},
			#{spuCode,jdbcType=VARCHAR},
			#{price,jdbcType=INTEGER}*100,
			#{name,jdbcType=VARCHAR},
			#{subtitle,jdbcType=VARCHAR},
			#{notes,jdbcType=VARCHAR},
			#{image,jdbcType=VARCHAR},
			#{originPlace,jdbcType=VARCHAR},
			#{material,jdbcType=VARCHAR},
			#{shortNotes,jdbcType=VARCHAR},
			#{createDate,jdbcType=TIMESTAMP},
			#{updateDate,jdbcType=TIMESTAMP}
		)
	</insert>

    <update id="update" parameterType="com.rongyi.entity.product.Product">
        UPDATE product_sku

        <set>
            update_date=now(),
            <if test="rfidCode != null and rfidCode != ''"> rfid_code = #{rfidCode,jdbcType=VARCHAR} ,</if>
            <if test="spuCode != null and spuCode != ''"> spu_code = #{spuCode,jdbcType=VARCHAR} ,</if>

            <if test="price != null and price != ''"> price = #{price,jdbcType=VARCHAR}*100 ,</if>
            <if test="name != null and name != ''"> `name` = #{name,jdbcType=VARCHAR} ,</if>
            <if test="subtitle != null and subtitle != ''"> subtitle = #{subtitle,jdbcType=VARCHAR} ,</if>

            <if test="notes != null and notes != ''"> notes = #{notes,jdbcType=VARCHAR} ,</if>
            <if test="shortNotes != null and shortNotes != ''"> short_notes = #{shortNotes,jdbcType=VARCHAR} ,</if>
            <if test="image != null and image != ''"> image = #{image,jdbcType=VARCHAR} ,</if>

            <if test="originPlace != null and originPlace != ''">origin_place = #{originPlace,jdbcType=VARCHAR} ,</if>
            <if test="material != null and material != ''">material = #{material,jdbcType=VARCHAR} ,</if>
        </set>

        where sku_code = #{skuCode}
    </update>


    <!-- 批量更新第一种方法，通过接收传进来的参数list进行循环着组装sql -->
<!--    <update id="batchUpdate" parameterType="java.utils.List">

        <foreach collection="list" separator=";" item="item">
            UPDATE product_sku

            <set>
                update_date=now(),
                <if test="rfidCode != null and rfidCode != ''"> rfid_code = #{item.rfidCode,jdbcType=VARCHAR} ,</if>
                <if test="spuCode != null and spuCode != ''"> spu_code = #{item.spuCode,jdbcType=VARCHAR} ,</if>

                <if test="price != null and price != ''"> price = #{item.price,jdbcType=VARCHAR}*100 ,</if>
                <if test="name != null and name != ''"> `name` = #{item.name,jdbcType=VARCHAR} ,</if>
                <if test="subtitle != null and subtitle != ''"> subtitle = #{item.subtitle,jdbcType=VARCHAR} ,</if>

                <if test="notes != null and notes != ''"> notes = #{item.notes,jdbcType=VARCHAR} ,</if>
                <if test="shortNotes != null and shortNotes != ''"> short_notes = #{item.shortNotes,jdbcType=VARCHAR} ,</if>
                <if test="image != null and image != ''"> image = #{item.notes,jdbcType=VARCHAR} ,</if>

                <if test="originPlace != null and originPlace != ''">origin_place = #{item.originPlace,jdbcType=VARCHAR} ,</if>
                <if test="material != null and material != ''">material = #{item.material,jdbcType=VARCHAR} ,</if>
            </set>

            where sku_code = #{item.skuCode}
        </foreach>
    </update>
-->


</mapper>
